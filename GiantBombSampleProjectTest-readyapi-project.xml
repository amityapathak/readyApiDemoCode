<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="de4e6563-2342-41ae-ab01-f0e8e41eca02" created="3.42.1" activeEnvironment="Default environment" name="GiantBombSampleProjectTest" projectVersion="" updated="3.42.1 2022-11-28T12:27:35Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="28c2d628-ed51-4b31-b75a-f1d16fa4ac9a" wadlVersion="http://wadl.dev.java.net/2009/02" name="GiantBombTestSuit" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache/>
    <con:endpoints>
      <con:endpoint>https://www.giantbomb.com</con:endpoint>
    </con:endpoints>
    <con:resource name="GetAccessoryTest" path="/api/accessory/{guid}/" id="7dba062a-43d9-4bff-a206-65e1c1bb392f">
      <con:settings/>
      <con:parameters>
        <con:parameter>
          <con:name>guid</con:name>
          <con:style>TEMPLATE</con:style>
        </con:parameter>
      </con:parameters>
      <con:method name="GetAccessories" id="98cf861c-c85d-41b7-8808-71d3973fd563" method="GET">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>api_key</con:name>
            <con:value>[YOUR API KEY]</con:value>
            <con:style>QUERY</con:style>
            <con:default>[YOUR API KEY]</con:default>
            <con:path xsi:nil="true"/>
            <con:description xsi:nil="true"/>
          </con:parameter>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>text/html; charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>response</con:element>
        </con:representation>
        <con:request name="GetAccessoriesTestCase" id="8f977a34-93f3-4ee9-9a30-3585ef2e18ef" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://www.giantbomb.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="api_key" value="[YOUR API KEY]"/>
            <con:entry key="User-Agent" value="PostmanRuntime/7.29.2"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>api_key</con:entry>
            <con:entry>User-Agent</con:entry>
            <con:entry>guid</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetAccessoriesTest" path="/api/accessories/" id="90d7dbf0-8d60-4b2b-b604-30cd96c590a6">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>api_key</con:name>
          <con:value>[YOUR API KEY]</con:value>
          <con:style>QUERY</con:style>
          <con:default>[YOUR API KEY]</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="GetAccessory" id="d9745637-f6d9-46a3-aaea-419f55c03eff" method="GET">
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>User-Agent</con:name>
            <con:value/>
            <con:style>HEADER</con:style>
            <con:default/>
          </con:parameter>
        </con:parameters>
        <con:representation type="FAULT">
          <con:mediaType>application/xml; charset=utf-8</con:mediaType>
          <con:status>401</con:status>
          <con:params/>
          <con:element>response</con:element>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/xml; charset=utf-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>response</con:element>
        </con:representation>
        <con:request name="GetAccessoryTestCase" id="7298a2b3-4070-463a-9b7e-adbde0caa9ca" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://www.giantbomb.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters>
            <con:entry key="User-Agent" value="PostmanRuntime/7.29.2"/>
          </con:parameters>
          <con:parameterOrder>
            <con:entry>api_key</con:entry>
            <con:entry>User-Agent</con:entry>
          </con:parameterOrder>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetCharacter" path="/api/character/[guid]/" id="f236f489-1e1e-448e-95b0-792c0eb01372">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>api_key</con:name>
          <con:value>[YOUR API KEY]</con:value>
          <con:style>QUERY</con:style>
          <con:default>[YOUR API KEY]</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="GetCharacter" id="a1e94364-617f-4085-a1f2-9ef5dd90a4f0" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:request name="GetCharacterTestCase" id="b416bd5f-38e8-4f6c-9fd2-5799ea212e3d" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://www.giantbomb.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="GetChat" path="/api/chat/[guid]/" id="77d3204f-c117-4562-bbea-9ce24c2452c9">
      <con:settings/>
      <con:parameters>
        <con:parameter required="true">
          <con:name>api_key</con:name>
          <con:value>[YOUR API KEY]</con:value>
          <con:style>QUERY</con:style>
          <con:default>[YOUR API KEY]</con:default>
        </con:parameter>
      </con:parameters>
      <con:method name="GetChat" id="317b84de-d713-407e-9d31-fdb70e4c2f8a" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:request name="GetChatTestCase" id="56440aab-64ea-450a-a0f5-38defe6811f7" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://www.giantbomb.com</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="b2ff309f-7cd2-4616-ad6d-97697b108833" name="GiantBombTestSuite">
    <con:settings/>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="a8c44de2-90a3-4aac-a7b8-8ffb5894daf2" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="GiantBombTest_PositiveTestCases" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="datasource" name="Data Source" id="90c33c55-e792-48f5-a9d3-501a2549e1fa">
        <con:settings/>
        <con:config xsi:type="con:DataSourceStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:dataSource type="Grid">
            <con:configuration>
              <check><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">true</con:entry></xml-fragment>]]></check>
              <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config">84790c35cdeb30f31abc65923798f6aab390b570</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">100</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">${GetAccessories#Response#//response[1]/results[1]/accessory[1]/guid[1]}</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">183</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry><con:entry xmlns:con="http://eviware.com/soapui/config">1</con:entry></xml-fragment>]]></row>
              <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
              <row><![CDATA[<xml-fragment><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/><con:entry xmlns:con="http://eviware.com/soapui/config"/></xml-fragment>]]></row>
              <recognizeAsPlainText>true</recognizeAsPlainText>
            </con:configuration>
          </con:dataSource>
          <con:shared>true</con:shared>
          <con:restartShared>true</con:restartShared>
          <con:property>api_key</con:property>
          <con:property>numberOfPages_GetAccessories</con:property>
          <con:property>guid</con:property>
          <con:property>TotalResult_GetAccessories</con:property>
          <con:property>numberOfPages_GetAccessoryDetails</con:property>
          <con:property>totalResult_GetAccessoryDetails</con:property>
          <con:restartOnRun>true</con:restartOnRun>
          <con:stopDatasourceExhausted>false</con:stopDatasourceExhausted>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetAccessories" id="1f5ce6d2-ceb7-492a-a127-42353c4609ac">
        <con:settings/>
        <con:config service="GiantBombTestSuit" resourcePath="/api/accessories/" methodName="GetAccessory" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetAccessories" id="fe1a8a28-ab51-4f69-96d1-fda6d9225258" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>http://www.giantbomb.com</con:endpoint>
            <con:request/>
            <con:originalUri>https://www.giantbomb.com/api/</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="api_key" value="${Data Source#api_key}"/>
              <con:entry key="User-Agent" value="PostmanRuntime/7.29.2"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>api_key</con:entry>
              <con:entry>User-Agent</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCases01:ValidateSuccessMessage_GetAccessories" id="68f0b3bb-2984-4a09-ae50-8ccda48470eb">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++++++++++Test cases 01 : Validate Message ++++++++++++++++++++++++++ 
//This method is used to validate error vs success message 

def getAccessories_ActualResponse = context.expand( '${GetAccessories#Response#//response[1]/error[1]}' )

try
{
if(getAccessories_ActualResponse =="OK")
{
	log.info("******Assertion passed *******Test Case 01 - getAccessoriesResponse code is as expected :" + getAccessories_ActualResponse)
	assert true;
}
else if(getAccessories_ActualResponse =="Invalid API Key")
{
	log.error("*****Asseration failed ******** API Key is null or empty or Invalid  in the GetAccessories Request with the valid Error Message :"+getAccessories_ActualResponse)
	assert  false;
}
else
{

	log.error ("******Assertion failed****Test Case 01 - getAccessoriesResponse code is as not working as expected : "+ getAccessories_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase02 :ValdiateNumberofPages__GetAccessories" id="d4710c01-90d4-4cb7-a0d9-f13c6cf1044e">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++Test case 02 : Valdiate Number of pages ++++++++++++++++++++++++
//This Method is used to validate number_of_page_results in the response

def numberOfPages_ActualResponse = context.expand( '${GetAccessories#Response#//response[1]/number_of_page_results[1]}' )

def numberOfPages_Expected = context.expand( '${Data Source#numberOfPages_GetAccessories}' )

try
{
if(numberOfPages_ActualResponse ==numberOfPages_Expected)
{
	log.info("*******Asseration passed *******Test Case 02-Number of pages are as expected for GetAccessories :"+numberOfPages_ActualResponse)
	assert true;
}
else
{
	log.error("********Assertion failed *********Test Case 02-Number of pages are not as expected for GetAccessories:"+numberOfPages_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase03:ValidateGetCountOfTotalAccessory__GetAccessories" id="4aad851c-a87f-42b2-93c8-214512947390">
        <con:settings/>
        <con:config>
          <script>import groovy.util.XmlSlurper;


//++++++++++++++++++++Test case 03: Get Count of Total Accessory from the response +++++++++++++++++++++++++++
//This method is used to validate the total accessory count from the response 
def response = context.expand( '${GetAccessories#Response#//response[1]/results[1]}' )

def groovyUtils=new com.eviware.soapui.support.GroovyUtils(context)
 
def holder = groovyUtils.getXmlHolder (response)
def count =holder["count(//accessory)"]

 try{
if (count=="100")
{
	log.info("******Assertion passed****** Test Case 03-GetAccessoryCountMethod for GetAccessories :" +count)
	assert true;
}
else
{
	log.info("*******Assertion failed*******Test Case 03- GetAccessoryCountMethod for GetAccessories:" +count)
	assert false;
}
 }
 catch(Exception e)
 {
 	log.info(e)
 }</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase04: ValidateNumberOfTotalTesult__GetAccessories" id="34c88673-77f2-4472-8a13-a834e7896b5d">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++Test case 04 : Valdiate Number of  Total Result ++++++++++++++++++++++++
//This Method is used to validate number_of_total_results in the response

def numberOfTotalResult_ActualResponse = context.expand( '${GetAccessories#Response#//response[1]/number_of_total_results[1]}' )
def numberOfTotalResult_Expected = context.expand( '${Data Source#TotalResult_GetAccessories}' )

try
{
if(numberOfTotalResult_ActualResponse ==numberOfTotalResult_Expected)
{
	log.info("********Asseration passed *******Test Case 04-Number of total Result are as expected  forGetAccessories :"+numberOfTotalResult_ActualResponse)
	assert true;
}
else
{
	log.error("*******Assertion failed************Test Case 04-Number of total Result are not as expected  for GetAccessories :"+numberOfTotalResult_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="SetGuidValue" id="b075de53-05f6-486c-aa42-6772ffdaff23">
        <con:settings/>
        <con:config>
          <script>//This Method is used to set GUID value on test case level for passing as a resource parameter in GetAccessoryDetails API as a configurable data

try
{
def guid = context.expand( '${GetAccessories#Response#//response[1]/results[1]/accessory[1]/guid[1]}' )
    log.info("*****************************expected guid :  +guid")

    testRunner.testCase.setPropertyValue("GUID", guid)
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="GetAccessoryDetails" id="9d8613c3-566e-4415-860a-4c076ecb980d">
        <con:settings/>
        <con:config service="GiantBombTestSuit" resourcePath="/api/accessory/{guid}/" methodName="GetAccessories" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="GetAccessoryDetails" id="8f977a34-93f3-4ee9-9a30-3585ef2e18ef" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://www.giantbomb.com</con:endpoint>
            <con:request/>
            <con:originalUri>https://www.giantbomb.com/</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="api_key" value="${Data Source#api_key}"/>
              <con:entry key="User-Agent" value="PostmanRuntime/7.29.2"/>
              <con:entry key="guid" value="${Data Source#guid}"/>
            </con:parameters>
            <con:parameterOrder>
              <con:entry>api_key</con:entry>
              <con:entry>User-Agent</con:entry>
              <con:entry>guid</con:entry>
            </con:parameterOrder>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCases01:ValidateSuccessMessage _GetAccessoryDetails" id="b67b753a-16aa-41c4-8e53-581e3fee9c6e">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++++++++++Test cases 01 : Validate Message for Get Accessories Details++++++++++++++++++++++++++ 
//This method is used to validate error vs success message 

def getAccessories_ActualResponse = context.expand( '${GetAccessoryDetails#Response#//response[1]/error[1]}' )

try
{
if(getAccessories_ActualResponse =="OK")
{
	log.info("********Assertion passed ******Test Case 01 - getAccessoryDetailsResponse code is as expected  :" + getAccessories_ActualResponse)
	assert true;
}
else
{

	log.error ("*******Assertion failed*********Test Case 01 - getAccessoryDetailsResponse code is as not working as expected : "+ getAccessories_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase02 :ValdiateNumberofPages_GetAccessoryDetails" id="f6b37b51-3880-40de-ba40-f28ba8daaaab">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++Test case 02 : Valdiate Number of pages for Get Accessories Details ++++++++++++++++++++++++
//This Method is used to validate number_of_page_results in the response

def numberOfPages_ActualResponse = context.expand( '${GetAccessoryDetails#Response#//response[1]/number_of_page_results[1]}' )

def numberOfPages_ExpectedGetAccessoryDetails = context.expand( '${Data Source#numberOfPages_GetAccessoryDetails}' )

try
{
if(numberOfPages_ActualResponse ==numberOfPages_ExpectedGetAccessoryDetails)
{
	log.info("*****Asseration passed *******TC-02 :Number of pages are as expected for GetAccessoryDetails:"+numberOfPages_ActualResponse)
	assert true;
}
else
{
	log.error("*****Assertion failed ******TC-02: Number of pages are not as expected for GetAccessoryDetails :"+numberOfPages_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase03: ValidateNumberOfTotalTesult_GetAccessoryDetails" id="5330d237-6486-4557-bd5e-0e38c6a6adef">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++Test case 03 : Valdiate Number of  Total Result for Get Accessories Details ++++++++++++++++++++++++
//This Method is used to validate number_of_total_results in the response

def numberOfTotalResult_ActualResponse = context.expand( '${GetAccessoryDetails#Response#//response[1]/number_of_total_results[1]}' )
def totalResult_ExpectedGetAccessoryDetails = context.expand( '${Data Source#totalResult_GetAccessoryDetails}' )

if(numberOfTotalResult_ActualResponse ==totalResult_ExpectedGetAccessoryDetails)
{
	log.info("******Asseration passed**********TC-03: Number of total Result are as expected for GetAccessoryDetails :"+numberOfTotalResult_ActualResponse)
	assert true;
}
else
{
	log.error("*****Assertion failed **********TC-03  Number of total Result are not as expected for GetAccessoryDetails :"+numberOfTotalResult_ActualResponse)
	assert false;
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase04: ValidateApiDetailsURL_GetAccessoryDetails" id="db9a6bea-c6cc-465f-84fd-dbab02da6c75">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++Test case 04 : Valdiate API Details URL for Get Accessories Details ++++++++++++++++++++++++
//This Method is used to validate  API Details URL  in the response


def ApiDetailsUrl_ActualResponse = context.expand( '${GetAccessoryDetails#Response#//response[1]/results[1]/api_detail_url[1]}' )
def ApiDetailsUrl_ExpectedResponse ="https://www.giantbomb.com/api/accessory/3000-1/"

try
{
if(ApiDetailsUrl_ActualResponse ==ApiDetailsUrl_ExpectedResponse)
{
	log.info("*******Asseration passed ********TC-04: Validate APi Details URL are as expected for GetAccessoryDetails :"+ApiDetailsUrl_ActualResponse)
	assert true;
}
else
{
	log.error("*******Assertion failed ********TC-04: Validate APi Details URL are not as expected for GetAccessoryDetails :"+ApiDetailsUrl_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:testStep type="groovy" name="TestCase05:ValidateName_GetAccessoryDetails" id="73583780-7175-4b46-baf5-3c76d8c33bca">
        <con:settings/>
        <con:config>
          <script>//++++++++++++++Test case 05 : Valdiate Name for Get Accessories Details ++++++++++++++++++++++++
//This Method is used to validate Name  in the response


def Name_ActualResponse = context.expand( '${GetAccessoryDetails#Response#//response[1]/results[1]/name[1]}' )
def Name_ExpectedResponse ="DualShock Analog Controller"

try
{
if(Name_ActualResponse ==Name_ExpectedResponse)
{
	log.info("*****Asseration passed ********TC-05: Validate Name are as expected for GetAccessoryDetails :"+Name_ActualResponse)
	assert true;
}
else
{
	log.error("*******Assertion failed *********TC-05:Validate Name are not as expected for GetAccessoryDetails :"+Name_ActualResponse)
	assert false;
}
}
catch(Exception e)
{
	log.info(e)
}</script>
        </con:config>
      </con:testStep>
      <con:properties>
        <con:property>
          <con:name>GUID</con:name>
          <con:value>3000-1</con:value>
        </con:property>
      </con:properties>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
